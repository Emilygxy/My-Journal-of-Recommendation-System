"""
----------对比分析UserCF算法和ItemCF算法-------------

UserCF算法主要分为2个步骤：
（1）找到与目标用户A兴趣相投的用户；
（2）得到在与用户A相似的用户的评分物品中，用户A没有进行过评分的item，将得到的items推荐给用户A

ItemCF算法主要分为2个步骤：
（1）计算item之间的相似度；
（2）根据用户的历史行为和item的相似度，为用户生成推荐列表

由此可知：
UserCF算法注重的是目标用户所在的兴趣小组，给目标用户推荐的是所在小组中的热门物品（即，相似用户喜欢的物品），更注重社会化；
ItemCF算法注重的是目标用户有过行为的历史物品（即，用户以前喜欢的相似物品），用户本身的兴趣变化和继承对用户的影响更大，更加注重个性化。

分别从以下3各方面来分析UserCF算法和ItemCF算法的区别
1.适用场景
UserCF算法--算法利用用户间的相似性来推荐，故当物品数量远远超过用户数量时，可以考虑UserCF算法。比如，新闻类和短视频类等快消素材网站，
因为这类网站内容更新频繁，且用户更加注重社会化热点。
ItemCF算法--算法利用物品间的相似性来推荐，故当用户数量远远超过物品数量时，可以考虑ItemCF算法。比如，购物网站和技术博客类的网站，
因为这类网站商品数量或文章数据相对稳定，计算相似度时不但计算量小，也不必频繁进行更新。
2.推荐系统多样性
---单用户的多样性。ItemCF算法多样性较差，因为ItemCF算法推荐的是和之前有过行为物品的相似物品，物品覆盖面较小，丰富度低。
---系统的多样性。UserCF算法多样性较差，因为UserCF算法更加注重推荐热门物品。
ItemCF算法的推荐有很好的新颖性，容易发现并推荐长尾里的物品。由于UserCF算法经常推荐热门的物品，所以它在推荐长尾里的物品方面能力不足。
3.用户特点
UserCF算法推荐的原则是：假设用户喜欢那些和他有相同喜好的用户喜欢的东西。但是，如果用户暂时找不到兴趣相投的邻居，那么UserCF算法的推荐效果就大打折扣了。
因此，UserCF算法是否适用，跟目标用户有多少个“邻居用户”有关。
ItemCF算法推荐的原则是：假设用户喜欢和他以前购买的（或浏览过的）物品类型相同的物品。在此基础上，计算一个用户喜欢的物品的自相似度。
若一个用户喜欢物品的自相似度大，则说明他喜欢的东西是比较相似的。即这个用户比较符合ItemCF算法的基本假设，他对ItemCF算法的适应度比较好。
若一个用户喜欢物品的自相似度小，则说明这个用户的喜好习惯并不满足ItemCF算法的基本假设，因此推荐效果不那么好。


-------------------------------------------------------------摘自《推荐系统开发实战》
"""